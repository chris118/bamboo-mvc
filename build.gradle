apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //test
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    //support
    compile(rootProject.ext.dependencies["appcompat-v7"])
    compile(rootProject.ext.dependencies["design"])
    compile(rootProject.ext.dependencies["constraint-layout"])
    compile(rootProject.ext.dependencies["recyclerview-v7"])
    compile(rootProject.ext.dependencies["support-v4"])

    //tools
    compile rootProject.ext.dependencies["dagger2"]
    annotationProcessor(rootProject.ext.dependencies["dagger2-compiler"]) {
        exclude module: 'dagger'
    }
    compile rootProject.ext.dependencies["gson"]
    compile(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
        exclude module: 'butterknife-annotations'
    }
    compile rootProject.ext.dependencies["androideventbus"]
    compile rootProject.ext.dependencies["rxpermissions"]
    compile rootProject.ext.dependencies["multidex"]
    compile rootProject.ext.dependencies["bugly-crashreport"]
    compile rootProject.ext.dependencies["bugly-nativecrashreport"]

    debugCompile rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile rootProject.ext.dependencies["leakcanary-android-no-op"]
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //rx
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile(rootProject.ext.dependencies["rxlifecycle"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    compile(rootProject.ext.dependencies["rxlifecycle-components"]){
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }

    //network
    compile(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    compile(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    compile(rootProject.ext.dependencies["retrofit-adapter-rxjava"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    compile rootProject.ext.dependencies["okhttp3"]
    compile rootProject.ext.dependencies["okhttp3-logging"]
    compile rootProject.ext.dependencies["glide"]

    //glider
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"])

    //ui
    compile rootProject.ext.dependencies["kprogresshud"]
    compile rootProject.ext.dependencies["Android-PickerView"]
}

apply from: 'bintray.gradle'